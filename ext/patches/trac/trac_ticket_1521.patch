--- trac/web/main.py	2013-04-19 07:00:26.147688352 +0300
+++ trac/web/main.py	2013-04-19 07:00:36.499688498 +0300
@@ -53,6 +53,8 @@
 from trac.web.href import Href
 from trac.web.session import Session
 
+from multiproject.core.db import admin_query, safe_string
+
 default_tracker = 'http://trac.edgewall.org'
 """This URL is used for semi-automatic bug reports (see
    `send_internal_error`).  Please modify it to point to your own
@@ -85,6 +87,26 @@
         return self
 
 
+class Auxilliary:
+    def is_archived(self, env_name):
+      query = """
+        SELECT project_archive.project_archive_id
+        FROM project_archive
+        WHERE environment_name = %s
+        """
+      with admin_query() as cursor:
+            try:
+                cursor.execute(query, env_name)
+                row = cursor.fetchone()
+                if not row:
+                  return False
+            except:
+               pass
+            finally:
+               cursor.close()
+      return True
+
+
 def populate_hdf(hdf, env, req=None):
     """Populate the HDF data set with various information, such as common URLs,
     project information and request-related information.
@@ -188,9 +210,8 @@
         In addition, this method initializes the HDF data set and adds the web
         site chrome.
         """
-        self.log.debug('Dispatching %r', req)
         chrome = Chrome(self.env)
-
+    
         # Setup request callbacks for lazily-evaluated properties
         req.callbacks.update({
             'authname': self.authenticate,
@@ -251,7 +272,6 @@
                             msg = _('Do you have cookies enabled?')
                         raise HTTPBadRequest(_('Missing or invalid form token.'
                                                ' %(msg)s', msg=msg))
-
                 # Process the request and render the template
                 resp = chosen_handler.process_request(req)
                 if resp:
@@ -453,13 +473,20 @@
                     env_path = get_environments(environ).get(env_name)
 
                 if not env_path or not os.path.isdir(env_path):
-                    errmsg = 'Environment not found'
+                     if Auxilliary().is_archived(env_name):
+                        link = "<a href="+'"/HelpAndSupport"'+"> Help and Support. </a><p>"
+                        msg = "<strong> This project has been archived. </strong>"
+                        msg = msg + "<p> If you think it should not be archived, Please raise a request on "
+                        errmsg = msg + link
+                     else:
+                        errmsg = "<p>Environment not found.</p>"
+
             except UnicodeDecodeError:
                 errmsg = 'Invalid URL encoding (was %r)' % script_name
 
             if errmsg:
                 start_response('404 Not Found', 
-                               [('Content-Type', 'text/plain'),
+                               [('Content-Type', 'text/html'),
                                 ('Content-Length', str(len(errmsg)))])
                 return [errmsg]
 
